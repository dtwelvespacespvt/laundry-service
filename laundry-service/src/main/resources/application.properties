############# Application Context ###############
spring.application.name=laundry
server.port=8086
server.servlet.context-path=/laundry-master

spring.profiles.active=mercury

############## Application Access Logs Config ##############
server.tomcat.max-threads=50
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=/var/log/stanza
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
server.tomcat.accesslog.prefix=laundry_access_log
server.tomcat.accesslog.pattern=%{X-Forwarded-For}i %h %A '%{User-Agent}i'; "%{Referer}i" "%l" "%u" %t %{guid}r %{luid}r %{customId1}r %{customId2}r \u201C%r\u201C %I %s %b %F %D
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.rotate=true

generate.invoice.prod = false

########## Auth Config ##############
enable.cors=true
enable.authorize=false
enable.authentication=false
service.user.url=https://dev-mercury.stanzaliving.com/user
service.acl.url=https://dev.stanzaliving.com/userv2
service.stockroom.url=https://dev-mercury-new.stanzaliving.com/catalog
service.inception.url=https://dev-eks-medulla.stanzaliving.com/inception/
service.transformation.url=https://dev-mercury.stanzaliving.com/transformationmaster/
service.vendor.url=https://dev-mercury.stanzaliving.com/vendor
service.purchase.url=https://dev-mercury.stanzaliving.com/po
service.gsri.url = https://dev-mercury.stanzaliving.com/grn
service.invoice.url = https://dev-mercury.stanzaliving.com/erpinvoice
medulla.gateway.url=https://dev-mercury-new.stanzaliving.com/gateway
external.thumbor.base.url = http://thumbor-dev.stanzaliving.com
service.residence.url=https://dev-mercury.stanzaliving.com/residenceservice/
service.room.swap.url=https://dev-room-swap.stanzaliving.com/
service.gramPowerClient.url = https://api.grampower.com/gp_api/api
service.aliste.url=https://test.alistetechnologies.com:443/
#service.aliste.url = https://smartmeter.aliste.io/
service.venta.aggregation.url = https://dev-mercury.stanzaliving.com/venta-aggregation
service.booking.url = https://dev-mercury.stanzaliving.com/bookingService-v2
phoenix.service.url=https://erp.stanzaliving.com/phoenix/
service.enkash.url = https://api.enkash.in
enkash.oauth.username = EKSFFFL2
enkash.oauth.password = 16dda21a85916a6d6935a36a00da900555defe35
enkash.oauth.clientId = EKSFFFL2

################# MySQL JDBC Connection mChange C3P0 ###############
spring.liquibase.enabled=false
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml

########################Slack Configuration#######################
enable.slack.exception=false
service.slack.url=https://hooks.slack.com/services/
service.slack.exception.endUrl=TJ9PYKSFQ/BTP2ACY91/WWc3Ffn0spzcQHuKHbopT9s0

################################# Kafka Properties ##############################
kafka.consumer.autostart=true
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.client-id=optimusClient
spring.kafka.admin.fail-fast=true
spring.kafka.listener.type=batch

spring.kafka.producer.acks=1
spring.kafka.producer.retries=1
spring.kafka.producer.properties.max.request.size=21943040
spring.kafka.producer.properties.message.max.bytes=21943040

spring.kafka.consumer.group-id=laundry-consumer-group
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.fetch-max-wait=100ms
spring.kafka.consumer.fetch-min-size=10
spring.kafka.consumer.max-poll-records=200
spring.kafka.consumer.properties.fetch.max.bytes=20971520
spring.kafka.consumer.properties.max.partition.fetch.bytes=10485760

################################# Kafka Topics ##################################
kafka.topic.servicemixTransformation=servicemix-transformation
kafka.topic.createInvoice=createInvoice
kafka.topic.roomRecharge=room-recharge-consumer
kafka.topic.update.recharge.details.payu=updatePayuRechargeStatus
kafka.topic.update.recharge.details.vendor=updateVendorRechargeDetails

################################## healthcheck spring properties ##################################
management.endpoint.health.show-details=ALWAYS
management.health.db.enabled=false
management.health.diskspace.enabled=true

################################# redis properties ##################################
#redis.url=dev-redis.oo7hoe.0001.aps1.cache.amazonaws.com
#redis.port=6379
#redis.database=0
redis.connection.pool.size=20
redis.connection.pool.size.min=2
redis.connection.timeout=5000
redis.idle.connection.timeout=120000
redis.waitTime=100

################# for Actuator ###############
management.security.enabled = false
management.endpoints.web.exposure.include=*
#logging.level.org.springframework: DEBUG


#spring.primary.datasource.url=jdbc:postgresql://medulla-dev.cldq4iyr6wzu.ap-south-1.rds.amazonaws.com:5432/utilityMaster
#spring.primary.datasource.username=postgres
#spring.primary.datasource.password=TIX6CROdgg5rxCFwcih7
#spring.primary.datasource.platform=postgres
#spring.primary.datasource.driverClassName=org.postgresql.Driver
#
##============================================================================
## Read Data Source Config
##============================================================================
#spring.read.datasource.url=jdbc:postgresql://medulla-dev.cldq4iyr6wzu.ap-south-1.rds.amazonaws.com.com:5432/utilityMaster
#spring.read.datasource.username=postgres
#spring.read.datasource.password=TIX6CROdgg5rxCFwcih7
#spring.read.datasource.platform=postgres
#spring.read.datasource.driverClassName=org.postgresql.Driver


c3p0.initialPoolSize=1
c3p0.maxPoolSize=3
c3p0.minPoolSize=1
c3p0.maxIdleTime=6000


#============================================================================
# JPA Config
#============================================================================
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
hibernate.hbm2ddl.auto=update
spring.jpa.generate-ddl=true

#============================================================================
# Thread pool Configuration
#============================================================================
scheduled.thread.pool.size=2

cloud.aws.stack.auto=false
spring.autoconfigure.exclude=org.springframework.cloud.aws.autoconfigure.context.ContextInstanceDataAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextCredentialsAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextResourceLoaderAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.mail.MailSenderAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.cache.ElastiCacheAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.messaging.MessagingAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.jdbc.AmazonRdsDatabaseAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchExportAutoConfiguration

aes.secret.key=myKey
jwt.secret.key=test
spring.mvc.pathmatch.matching-strategy=ant-path-matcher


amazon.aws.accesskey = AKIA5DGDZDPS2NQ2NUXQ
amazon.aws.secretkey = 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
aws.default.region = ap-south-1


############### Elastic Search ###################
amazon.elasticsearch.endpoint = vpc-beta-eiqlcdtnu6xln3ud2bt4r26iou.ap-south-1.es.amazonaws.com
elastic.cacheName=ElasticFallback

############### Postman ###################
#postman.apiId = d84be0b3-b44d-4f0f-90c5-2db56dae7dca
#postman.apiVersionId = 14a252ca-281a-44a2-a586-24ae33bf5334
#postman.schemaId = 8e459967-2b8d-441d-b359-275b67aa418e
#postman.workspaceId = 0e5d1af0-e23a-428b-863c-34f1ffacc4d5
#postman.apiKey = PMAK-62eceec79fafbb607a83782c-1a809a95f9f4c9d1ff6b41d6fe15ef54f3
external.postman.base.url = https://api.getpostman.com/
external.swagger.base.url = http://localhost:8890/vendor

postman.apiId = c6e8f9a0-c1e8-488e-a121-541e2e3adf51
postman.apiVersionId = 9b68cf02-a107-4433-8a8d-4a6dc9527122
postman.schemaId = ca668133-c836-4bdf-a7bf-8cab20af2f93
postman.workspaceId = 1c93ed24-7817-4b15-a5c4-754a2337f66f
postman.apiKey = PMAK-63a59eee3163dd1cdb93fac5-b8acbec7441f841bc25fb35d87360fc44d
postman.collection.name = vendorLocal
postman.collection.key = vendorCollectionLocal


############## Filter Keys #########################
filter.category = categoryName_filter,categoryStatus_filter,specifications_filter,subCategory_filter,tag_filter
filter.item = itemName_filter,itemStatus_filter,purchaseType_filter,skuName_filter,skuCode_filter,itemType_filter
spring.main.allow-circular-references=true

#============================================================================
# Notification Service
#============================================================================
service.notification.url=https://dev-mercury.stanzaliving.com/notification-service
service.notification.request.appname=StanzaAlfred_Mercury